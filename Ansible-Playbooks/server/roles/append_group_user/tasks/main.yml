---
# tasks file for append_group_user

# Stop the playbook if the "username" var is empty
- name: Check the "username" variable
  fail:
    msg: The 'username' variable is empty
  when: not username

# If the server is a Debian Server and the "sudo" var is set to true, add the user to the "sudo" group (and remove it from all potential other group(s) it might be a part of)
- name: Add sudo privileges - Debian
  user:
    name: "{{username}}"
    groups: sudo
  when: ansible_facts['distribution'] == "Debian" and sudo | bool

# If the server is an Arch Server and the "sudo" var is set to true, add the user to the "wheel" group (and remove it from all potential other group(s) it might be a part of)
- name: Add sudo privileges - Arch
  user:
    name: "{{username}}"
    groups: wheel
  when: ansible_facts['distribution'] == "Archlinux" and sudo | bool

# If the server is a Debian Server and the "sudo" var is set to false, remove the user from the "sudo" group
- name: Remove sudo privileges - Debian
  shell:
    cmd: gpasswd -d "{{username}}" sudo
  ignore_errors: yes
  when: ansible_facts['distribution'] == "Debian" and not sudo | bool

# If the server is an Arch Server and the "sudo" var is set to false, remove the user from the "wheel" group
- name: Remove sudo privileges - Arch
  shell:
    cmd: gpasswd -d "{{username}}" wheel
  ignore_errors: yes
  when: ansible_facts['distribution'] == "Archlinux" and not sudo | bool

# If the "sudo" var is set to false and the "group" var is not empty, append the group(s) contained in the "group" var to the user
- name: Append group
  user:
    name: "{{username}}"
    groups: "{{group}}"
    append: yes
  when: not sudo | bool and group
