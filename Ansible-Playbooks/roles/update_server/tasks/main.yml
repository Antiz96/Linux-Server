---
# tasks file for update_server

- name: "Update server - Debian"
  when: ansible_facts['distribution'] == "Debian"
  block:

    - name: "Update repos"
      ansible.builtin.apt:
        update_cache: true

    - name: "Get packages to update"
      ansible.builtin.shell:
        cmd: apt list --upgradable
      register: debian_packages_update
      changed_when: false

    - name: "Show packages list to update"
      ansible.builtin.debug:
        msg: "{{ debian_packages_update.stdout_lines }}"
      when: debian_packages_update.stdout_lines | length > 0

    - name: "Update server"
      ansible.builtin.apt:
        upgrade: full
        autoremove: true

- name: "Update server - Arch"
  when: ansible_facts['distribution'] == "Archlinux"
  block:

    - name: "Update repos"
      community.general.pacman:
        update_cache: true

    - name: "Get packages to update"
      ansible.builtin.shell:
        cmd: checkupdates
      ignore_errors: true
      register: arch_packages_update
      changed_when: false

    - name: "Show packages list to update"
      ansible.builtin.debug:
        msg: "{{ arch_packages_update.stdout_lines }}"
      when: arch_packages_update.stdout_lines | length > 0

    - name: "Update server"
      community.general.pacman:
        upgrade: true

    - name: "Get orphan packages"
      ansible.builtin.shell:
        cmd: pacman -Qtdq
      ignore_errors: true
      register: arch_orphan_packages
      changed_when: false

    - name: "Show orphan packages list"
      ansible.builtin.debug:
        msg: "{{ arch_orphan_packages.stdout_lines }}"
      when: arch_orphan_packages.stdout_lines | length > 0

    - name: "Get pacnew files"
      ansible.builtin.shell:
        cmd: pacdiff -o
      register: arch_pacnew_files
      changed_when: false

    - name: "Show pacnew files list"
      ansible.builtin.debug:
        msg: "{{ arch_pacnew_files.stdout_lines }}"
      when: arch_pacnew_files.stdout_lines | length > 0


- name: "Update server - Alpine"
  when: ansible_facts['distribution'] == "Alpine"
  block:

    - name: "Update repos"
      community.general.apk:
        update_cache: true
    
    - name: "Get packages to update"
      ansible.builtin.shell:
        cmd: apk list --upgradable
      register: alpine_packages_update
      changed_when: false
    
    - name: "Show packages list to update"
      ansible.builtin.debug:
        msg: "{{ alpine_packages_update.stdout_lines }}"
      when: alpine_packages_update.stdout_lines | length > 0
    
    - name: "Update server"
      community.general.apk:
        available: true
        upgrade: true
    
    - name: "Get orphan packages"
      ansible.builtin.shell:
        cmd: apk list --orphaned
      register: alpine_orphan_packages
      changed_when: false
    
    - name: "Show orphan packages list"
      ansible.builtin.debug:
        msg: "{{ alpine_orphan_packages.stdout_lines }}"
      when: alpine_orphan_packages.stdout_lines | length > 0
    
    - name: "Get apk-new files"
      ansible.builtin.shell:
        cmd: update-conf -a -l
      register: alpine_apk_new_files
      changed_when: false
    
    - name: "Show apk-new files list"
      ansible.builtin.debug:
        msg: "{{ alpine_apk_new_files.stdout_lines }}"
      when: alpine_apk_new_files.stdout_lines | length > 0

- name: Reboot
  ansible.builtin.reboot:
    test_command: whoami
  when: ansible_connection != "local"
