---
# tasks file for update_server

# Update repositories on Debian servers
- name: Update repos - Debian
  apt:
    update_cache: yes
  when: ansible_facts['distribution'] == "Debian"

# Update repositories on Arch servers
- name: Update repos - Arch
  pacman:
    update_cache: yes
  when: ansible_facts['distribution'] == "Archlinux"

# Check the list of packages to update on Debian servers
- name: Check packages to update - Debian
  shell:
    cmd: apt list --upgradable | grep -v "En train de lister"
  ignore_errors: yes
  register: debian_packages_update
  when: ansible_facts['distribution'] == "Debian"

# Check the list of packages to update on Arch servers (requires the "pacman-contrib" package)
- name: Check packages to update - Arch
  shell:
    cmd: checkupdates
  ignore_errors: yes
  register: arch_packages_update
  when: ansible_facts['distribution'] == "Archlinux"

# Print the list of packages to update on Debian servers
- name: List packages to update - Debian
  debug:
    msg: "{{debian_packages_update.stdout_lines}}"
  when: ansible_facts['distribution'] == "Debian" and debian_packages_update.stdout_lines

# Print the list of packages to update on Arch servers
- name: List packages to update - Arch
  debug:
    msg: "{{arch_packages_update.stdout_lines}}"
  when: ansible_facts['distribution'] == "Archlinux" and arch_packages_update.stdout_lines

# Update packages on Debian servers
- name: Update - Debian
  apt:
    upgrade: full
    autoremove: yes
  when: ansible_facts['distribution'] == "Debian"

# Update the Arch Linux keyring (if necessary) on Arch servers
- name: Check archlinux-keyring - Arch
  pacman:
    name: archlinux-keyring
    state: latest
  when: ansible_facts['distribution'] == "Archlinux"

# Update packages on Arch servers
- name: Update - Arch
  pacman:
    upgrade: yes
  when: ansible_facts['distribution'] == "Archlinux"

# Check for orphan packages on Arch server
- name: Check orphan packages - Arch
  shell:
    cmd: pacman -Qtdq
  ignore_errors: yes
  register: arch_orphan_packages
  when: ansible_facts['distribution'] == "Archlinux"

# Print the list of orphan packages (if there are) on Arch servers
- name: List orphan packages - Arch
  debug:
    msg: "{{arch_orphan_packages.stdout_lines}}"
  when: ansible_facts['distribution'] == "Archlinux" and arch_orphan_packages.stdout_lines

# Check for pacnew files on Arch servers (requires the "pacman-contrib" package)
- name: Check pacnew files - Arch
  shell:
    cmd: pacdiff -o
  register: arch_pacnew_files
  when: ansible_facts['distribution'] == "Archlinux"

# Print the list of pacnew files (if there are) on Arch servers
- name: List pacnew files - Arch
  debug:
    msg: "{{arch_pacnew_files.stdout_lines}}"
  when: ansible_facts['distribution'] == "Archlinux" and arch_pacnew_files.stdout_lines

# Reboot servers (unless it's the Ansible server itself)
- name: Reboot
  reboot:
    test_command: whoami 
  when: ansible_connection != "local"
